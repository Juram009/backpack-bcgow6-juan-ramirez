basePath: /api/v1
definitions:
  handler.Product:
    type: object
  handler.ProductRequestPatch:
    properties:
      name:
        type: string
      price:
        type: integer
    required:
    - name
    - price
    type: object
  web.Response:
    properties:
      code:
        type: string
      data: {}
      error:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple API development by Digital House's team.
  title: Bootcamp Go - API GO-WEB
  version: "1.0"
paths:
  /products:
    get:
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List products
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not found products
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: 'Internal server error '
          schema:
            $ref: '#/definitions/web.Response'
      summary: Show list products
      tags:
      - Products
    post:
      consumes:
      - application/json
      parameters:
      - description: token requerido
        in: header
        name: token
        required: true
        type: string
      - description: Product to Store
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Product
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Product Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Store product
      tags:
      - Products
  /products/{id}:
    delete:
      parameters:
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      - description: Token
        in: header
        name: token
        required: true
        type: string
      responses:
        "202":
          description: Accepted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Product Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Delete product
      tags:
      - Products
    get:
      parameters:
      - description: Id product
        in: path
        name: id
        required: true
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Product
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Product Not found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Show one products by id
      tags:
      - Products
    patch:
      consumes:
      - application/json
      description: This endpoint update field name and price from a product
      parameters:
      - description: Token header
        in: header
        name: token
        required: true
        type: string
      - description: Product Id
        in: path
        name: id
        required: true
        type: integer
      - description: Product name
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/handler.ProductRequestPatch'
      produces:
      - application/json
      responses:
        "200":
          description: Product
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Product Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Update name and price product
      tags:
      - Products
    put:
      consumes:
      - application/json
      parameters:
      - description: Id product
        in: path
        name: id
        required: true
        type: integer
      - description: Token
        in: header
        name: token
        type: string
      - description: Product to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.Product'
      produces:
      - application/json
      responses:
        "200":
          description: Product
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Product Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Update product
      tags:
      - Products
swagger: "2.0"
